<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fjsaas.web.dao.UserCustomDao">
	<resultMap id="user" type="User">
		<result property="id" column="id" />
		<result property="telphone" column="telphone" />
		<result property="username" column="username" />
		<result property="realname" column="realname" />
		<result property="password" column="password" />
		<result property="job" column="job" />
		<result property="email" column="email" />
		<result property="address" column="address" />
		<result property="groupId" column="group_id" />
		<result property="isRoot" column="is_root" />
		<result property="suppilerId" column="suppiler_id" />
		<result property="locked" column="locked" />
		<result property="isActivation" column="is_activation" />
		<result property="salt" column="salt" />
		<result property="createDate" column="create_date" />
		<result property="creatorId" column="creator_id" />
		<result property="updateDate" column="update_date" />
		<result property="updatorId" column="updator_id" />
		<result property="isDel" column="is_del" />
		<collection property="roles" ofType="Role" >
			<id property="id" column="rId"/>
			<result property="name" column="rName"/>
			<collection property="permissions" ofType="Permission">
				<id property="id" column="pId"/>
				<result property="name" column="pName"/>
				<result property="type" column="pType"/>
				<result property="url" column="pUrl"/>
				<result property="percode" column="pPercode"/>
				<result property="parentid" column="pParentid"/>
				<result property="parentids" column="pParentids"/>
				<result property="sort" column="pSort"/>
			</collection>
		</collection>	
	</resultMap>
	<!-- Select SQL -->
	<sql id="userSelector">
		SELECT
			<if test="fields != null">
			 	${fields}
			</if>
			<if test="fields == null">
				id,telphone,username,realname,password,job,email,address,group_id,is_root,suppiler_id,locked,is_activation,salt,create_date,creator_id,update_date,updator_id,is_del	
			</if>
		FROM ass_user
	</sql>
	
	<sql id="userListWhere">
		<where>
				<if test="id != null">
					and id=#{id}
				</if>
				<if test="telphone != null">
					<if test="telphoneLike == false">
						and telphone=#{telphone}
					</if>
					<if test="telphoneLike == true">
						and  telphone like CONCAT("%",#{ telphone },"%")
					</if>
				</if>
				<if test="username != null">
					<if test="usernameLike == false">
						and username=#{username}
					</if>
					<if test="usernameLike == true">
						and  username like CONCAT("%",#{ username },"%")
					</if>
				</if>
				<if test="realname != null">
					<if test="realnameLike == false">
						and realname=#{realname}
					</if>
					<if test="realnameLike == true">
						and  realname like CONCAT("%",#{ realname },"%")
					</if>
				</if>
				<if test="password != null">
					<if test="passwordLike == false">
						and password=#{password}
					</if>
					<if test="passwordLike == true">
						and  password like CONCAT("%",#{ password },"%")
					</if>
				</if>
				<if test="job != null">
					<if test="jobLike == false">
						and job=#{job}
					</if>
					<if test="jobLike == true">
						and  job like CONCAT("%",#{ job },"%")
					</if>
				</if>
				<if test="email != null">
					<if test="emailLike == false">
						and email=#{email}
					</if>
					<if test="emailLike == true">
						and  email like CONCAT("%",#{ email },"%")
					</if>
				</if>
				<if test="address != null">
					<if test="addressLike == false">
						and address=#{address}
					</if>
					<if test="addressLike == true">
						and  address like CONCAT("%",#{ address },"%")
					</if>
				</if>
				<if test="groupId != null">
					and group_id=#{groupId}
				</if>
				<if test="isRoot != null">
					<if test="isRootLike == false">
						and is_root=#{isRoot}
					</if>
					<if test="isRootLike == true">
						and  is_root like CONCAT("%",#{ isRoot },"%")
					</if>
				</if>
				<if test="suppilerId != null">
					and suppiler_id=#{suppilerId}
				</if>
				<if test="locked != null">
					<if test="lockedLike == false">
						and locked=#{locked}
					</if>
					<if test="lockedLike == true">
						and  locked like CONCAT("%",#{ locked },"%")
					</if>
				</if>
				<if test="isActivation != null">
					<if test="isActivationLike == false">
						and is_activation=#{isActivation}
					</if>
					<if test="isActivationLike == true">
						and  is_activation like CONCAT("%",#{ isActivation },"%")
					</if>
				</if>
				<if test="salt != null">
					<if test="saltLike == false">
						and salt=#{salt}
					</if>
					<if test="saltLike == true">
						and  salt like CONCAT("%",#{ salt },"%")
					</if>
				</if>
				<if test="createDate != null">
					and create_date=#{createDate}
				</if>
				<if test="creatorId != null">
					and creator_id=#{creatorId}
				</if>
				<if test="updateDate != null">
					and update_date=#{updateDate}
				</if>
				<if test="updatorId != null">
					and updator_id=#{updatorId}
				</if>
				<if test="isDel != null">
					and is_del=#{isDel}
				</if>
				<if test="isDel == null">
					and is_del=0
				</if>
		</where>
	</sql>
	<sql id="userListOrder">
		<if test="orderFields != null and orderFields.size >0">
		order by 
			<foreach collection="orderFields" separator="," item="orderField">
				${orderField.fieldName} ${orderField.order}
			</foreach>
		</if>
	</sql>

	<sql id="userListLimit">
		<if test="startRow != null">
			limit #{startRow},#{pageSize}
		</if>
	</sql>

	
	<select id="getUserByLoginName" resultMap="user" parameterType="String">
		SELECT * from ass_user 
		<where>
				<trim prefix="(" suffix=")" prefixOverrides="or">
						or username = #{loginName}
						or telphone = #{loginName}
						or email = #{loginName}
				</trim>
					and is_del=0
		</where>
	</select>
	<!-- 根据主键查询 -->
	<select id="getUserWithPrivilegeById" resultMap="user" parameterType="hashMap">
	
	SELECT user.*,role.id rId,role.name rName,permission.id pId,permission.name pName,permission.type pType,permission.url pUrl,permission.percode pPercode,permission.parentid pParentid,permission.parentids pParentids,permission.sort pSort from 
	(SELECT * from ass_user 
		where ass_user.id =#{id}
	) user
	LEFT JOIN (select * from ass_user_role where ass_user_role.is_del=0) ur on user.id = ur.user_id
	LEFT JOIN (select * from ass_role where ass_role.is_del = 0) role on role.id = ur.role_id
	LEFT JOIN (select * from ass_role_permission where ass_role_permission.is_del = 0) rp on role.id = rp.role_id  
	LEFT JOIN (select * from ass_permission where ass_permission.is_del=0) permission on rp.permission_id = permission.id
	</select>

</mapper>