<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fjsaas.web.dao.QuotaDao">
	<resultMap id="quota" type="Quota">
		<result property="id" column="id" />
		<result property="quota" column="quota" />
		<result property="supplierId" column="supplier_id" />
		<result property="permissionId" column="permission_id" />
		<result property="createDate" column="create_date" />
		<result property="creatorId" column="creator_id" />
		<result property="updateDate" column="update_date" />
		<result property="updatorId" column="updator_id" />
		<result property="isDel" column="is_del" />
	</resultMap>
	<resultMap id="userQuotas" type="UserQuotas">
		<result property="id" column="id" />
		<result property="telphone" column="telphone" />
		<result property="updateDate" column="update_date" />
		<result property="updatorId" column="updator_id" />
	</resultMap>
	<!-- Select SQL -->
	<sql id="quotaSelector">
		SELECT
			<if test="fields != null">
			 	${fields}
			</if>
			<if test="fields == null">
				id,quota,supplier_id,permission_id,create_date,creator_id,update_date,updator_id,is_del	
			</if>
		FROM ass_quota
	</sql>
	
	<sql id="quotaListWhere">
		<where>
				<if test="id != null">
					and id=#{id}
				</if>
				<if test="quota != null">
					and quota=#{quota}
				</if>
				
				
				<if test="supplierId != null">
					and supplier_id=#{supplierId}
				</if>
				<if test="permissionId != null">
					and permission_id=#{permissionId}
				</if>
				<if test="createDate != null">
					and create_date=#{createDate}
				</if>
				
				
				<if test="creatorId != null">
					and creator_id=#{creatorId}
				</if>
				<if test="updateDate != null">
					and update_date=#{updateDate}
				</if>
				
				
				<if test="updatorId != null">
					and updator_id=#{updatorId}
				</if>
				<if test="isDel != null">
					and is_del=#{isDel}
				</if>
				<if test="isDel == null">
					and is_del=0
				</if>
				
				
		</where>
	</sql>
	<sql id="quotaListOrder">
		<if test="orderFields != null and orderFields.size >0">
		order by 
			<foreach collection="orderFields" separator="," item="orderField">
				${orderField.fieldName} ${orderField.order}
			</foreach>
		</if>
	</sql>

	<sql id="quotaListLimit">
		<if test="startRow != null">
			limit #{startRow},#{pageSize}
		</if>
	</sql>

	<!-- 根据主键查询 -->
	<select id="getQuotaByKey" resultMap="quota" parameterType="hashMap">
		SELECT id,quota,supplier_id,permission_id,create_date,creator_id,update_date,updator_id,is_del	 
		FROM ass_quota
		WHERE
		id=#{id}
		and is_del = 0
	</select>
	<select id="getQuotasByKeys" resultMap="quota" parameterType="ArrayList">
		SELECT id,quota,supplier_id,permission_id,create_date,creator_id,update_date,updator_id,is_del 
		FROM ass_quota
		WHERE
		id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
		and is_del = 0
	</select>

	<!-- 根据主键删除 -->
	<update id="deleteByKey" parameterType="hashMap">
		UPDATE ass_quota set is_del = 1 where id=#{id}
	</update>

	<!-- 根据主键批量删除 -->
	<update id="deleteByKeys">
		UPDATE ass_quota set is_del = 1 
		where id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
	</update>

	<!-- 根据主键更新 -->
	<update id="updateQuotaByKey" parameterType="Quota">
		UPDATE ass_quota
		<set>
			<trim suffixOverrides=",">
				<if test="id != null">
					id = #{id},
				</if>
				<if test="quota != null">
					quota = #{quota},
				</if>
				<if test="supplierId != null">
					supplier_id = #{supplierId},
				</if>
				<if test="permissionId != null">
					permission_id = #{permissionId},
				</if>
				<if test="createDate != null">
					create_date = #{createDate},
				</if>
				<if test="creatorId != null">
					creator_id = #{creatorId},
				</if>
				<if test="updateDate != null">
					update_date = #{updateDate},
				</if>
				<if test="updatorId != null">
					updator_id = #{updatorId},
				</if>
				<if test="isDel != null">
					is_del = #{isDel},
				</if>
			</trim>
		</set>
		WHERE
		id=#{id}
	</update>
	<!-- 分页 -->
	<select id="getQuotaListWithPage" parameterType="QuotaQuery" resultMap="quota">
		<include refid="quotaSelector" />
		<include refid="quotaListWhere" />
		<include refid="quotaListOrder" />
		<include refid="quotaListLimit" />
	</select>
	<!-- 数据总数 -->
	<select id="getQuotaListCount" parameterType="QuotaQuery" resultType="int">
		SELECT count(1) FROM ass_quota
		<include refid="quotaListWhere" />
	</select>
	<!-- 数据集合 -->
	<select id="getQuotaList" parameterType="QuotaQuery" resultMap="quota">
		<include refid="quotaSelector" />
		<include refid="quotaListWhere" />
		<include refid="quotaListOrder" />
	</select>
	
	<!-- 添加 -->
	<insert id="addQuota" parameterType="Quota">
		INSERT INTO ass_quota
		<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="id != null">
					id,
				</if>
				
				<if test="quota != null">
					quota,
				</if>
				
				<if test="supplierId != null">
					supplier_id,
				</if>
				
				<if test="permissionId != null">
					permission_id,
				</if>
				
				<if test="createDate != null">
					create_date,
				</if>
				
				<if test="creatorId != null">
					creator_id,
				</if>
				
				<if test="updateDate != null">
					update_date,
				</if>
				
				<if test="updatorId != null">
					updator_id,
				</if>
				
					is_del,
				
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
					
					<if test="id != null">
						#{id},
					</if>
					
					
					<if test="quota != null">
						#{quota},
					</if>
					
					
					<if test="supplierId != null">
						#{supplierId},
					</if>
					
					
					<if test="permissionId != null">
						#{permissionId},
					</if>
					
					
					<if test="createDate != null">
						#{createDate},
					</if>
					
					
					<if test="creatorId != null">
						#{creatorId},
					</if>
					
					
					<if test="updateDate != null">
						#{updateDate},
					</if>
					
					
					<if test="updatorId != null">
						#{updatorId},
					</if>
					
					
					<if test="isDel != null">
						#{isDel},
					</if>
					<if test="isDel == null">
						0
					</if>
					
		</trim>
	</insert>
	<!-- 新增sql语句  add by lyn                          begin-->
	
	<select id="getUserQuotaList" resultMap="userQuotas" parameterType="QuotaQuery">
		select 
			t1.id,
			t1.username username,
			t1.telphone,
			t1.suppiler_id supplierid,
			t2.name suppliername,
			t4.name rolename,
			sum(case when t6.percode = 1 then t5.total_quota else 0 END) high_quotas,
			sum(case when t6.percode = 1 then t5.distribute_quota else 0 END) h_deal_quotas,
			sum(case when t6.percode = 1 then t5.total_quota - t5.distribute_quota else 0 END) h_left_quotas,
			sum(case when t6.percode = 1 then t5.used_quato else 0 END) h_use_quotas,
			sum(case when t6.percode = 1 then t5.usable_quota else 0 END) h_unuse_quotas,
			sum(case when t6.percode = 0 then t5.total_quota else 0 END) comm_quotas,
			sum(case when t6.percode = 0 then t5.distribute_quota else 0 END) c_deal_quotas,
			sum(case when t6.percode = 0 then t5.total_quota - t5.distribute_quota else 0 END) c_left_quotas,
			sum(case when t6.percode = 0 then t5.used_quato else 0 END) c_use_quotas,
			sum(case when t6.percode = 0 then t5.usable_quota else 0 END) c_unuse_quotas
	from ass_user t1
	left join ass_supplier t2 on t1.suppiler_id = t2.id
	inner join ass_user_role t3 on t1.id = t3.user_id and t3.role_id = 1 #注释：仅查看为供应商管理员角色的汽配商信息
	left join ass_role t4 on t3.role_id = t4.id 
	left join ass_quota t5 on t2.id = t5.supplier_id
	left join ass_permission t6 on t5.permission_id = t6.id
	WHERE
		t1.is_del = 0
	GROUP BY t1.id,
			t1.username,
			t1.telphone,
			t1.suppiler_id,
			t2.id,
			t2.name,
			t3.id,
			t4.id,
			t4.name
	</select>
	<select id="getUserQuotasByKeys" resultMap="userQuotas" parameterType="ArrayList">
		select 
			t1.id,
			t1.username username,
			t1.telphone,
			t1.suppiler_id supplierid,
			t2.name suppliername,
			sum(case when t6.percode = 1 then t5.total_quota else 0 END) high_quotas,
			sum(case when t6.percode = 1 then t5.distribute_quota else 0 END) h_deal_quotas,
			sum(case when t6.percode = 1 then t5.total_quota - t5.distribute_quota else 0 END) h_left_quotas,
			sum(case when t6.percode = 1 then t5.used_quato else 0 END) h_use_quotas,
			sum(case when t6.percode = 1 then t5.usable_quota else 0 END) h_unuse_quotas,
			sum(case when t6.percode = 0 then t5.total_quota else 0 END) comm_quotas,
			sum(case when t6.percode = 0 then t5.distribute_quota else 0 END) c_deal_quotas,
			sum(case when t6.percode = 0 then t5.total_quota - t5.distribute_quota else 0 END) c_left_quotas,
			sum(case when t6.percode = 0 then t5.used_quato else 0 END) c_use_quotas,
			sum(case when t6.percode = 0 then t5.usable_quota else 0 END) c_unuse_quotas
	from ass_user t1
	left join ass_supplier t2 on t1.suppiler_id = t2.id
	left join ass_quota t5 on t2.id = t5.supplier_id
	left join ass_permission t6 on t5.permission_id = t6.id
	WHERE
		t1.id in
		<foreach collection="list" separator="," item="id" open="(" close=")">
			#{id}
		</foreach>
		and t1.is_del = 0
	GROUP BY t1.id,
			t1.username,
			t1.telphone,
			t1.suppiler_id,
			t2.id,
			t2.name
	</select>
	<select id="getUserQuotasByKey" resultMap="userQuotas" parameterType="hashMap">
		select 
			t1.id,
			t1.username username,
			t1.telphone,
			t1.suppiler_id supplierid,
			t2.name suppliername,
			sum(case when t6.percode = 1 then t5.total_quota else 0 END) high_quotas,
			sum(case when t6.percode = 1 then t5.distribute_quota else 0 END) h_deal_quotas,
			sum(case when t6.percode = 1 then t5.total_quota - t5.distribute_quota else 0 END) h_left_quotas,
			sum(case when t6.percode = 1 then t5.used_quato else 0 END) h_use_quotas,
			sum(case when t6.percode = 1 then t5.usable_quota else 0 END) h_unuse_quotas,
			sum(case when t6.percode = 0 then t5.total_quota else 0 END) comm_quotas,
			sum(case when t6.percode = 0 then t5.distribute_quota else 0 END) c_deal_quotas,
			sum(case when t6.percode = 0 then t5.total_quota - t5.distribute_quota else 0 END) c_left_quotas,
			sum(case when t6.percode = 0 then t5.used_quato else 0 END) c_use_quotas,
			sum(case when t6.percode = 0 then t5.usable_quota else 0 END) c_unuse_quotas
	from ass_user t1
	left join ass_supplier t2 on t1.suppiler_id = t2.id
	left join ass_quota t5 on t2.id = t5.supplier_id
	left join ass_permission t6 on t5.permission_id = t6.id
	WHERE
		t1.id = #{id}
		and t1.is_del = 0
	GROUP BY t1.id,
			t1.username,
			t1.telphone,
			t1.suppiler_id,
			t2.id,
			t2.name
	</select>
	<!-- 根据主键更新 -->
	<update id="updateUserQuotaByKey" parameterType="UserQuotas">
		UPDATE ass_quota
		<set>
			<trim suffixOverrides=",">
				<if test="high_quotas != null">
					total_quota = total_quota + #{high_quotas},
				</if>
				<if test="comm_quotas != null">
					total_quota = total_quota + #{comm_quotas},
				</if>
			</trim>
		</set>
		WHERE
		supplier_id = #{supplierid}
		AND permission_id = #{type}
	</update>
	<!-- 添加 -->
	<insert id="addUserQuota" parameterType="UserQuotas">
		INSERT INTO ass_quota
		<trim prefix="(" suffix=")" suffixOverrides=",">
				<if test="id != null">
					id,
				</if>
				<if test="high_quotas != null || comm_quotas != null">
					total_quota,
				</if>
				<if test="supplierid != null">
					supplier_id,
				</if>
				<if test="type != null">
					permission_id,
				</if>
					create_date,
				<if test="updatorId != null">
					creator_id,
				</if>
		</trim>
		VALUES
		<trim prefix="(" suffix=")" suffixOverrides=",">
					<if test="id != null">
						#{id},
					</if>
					<if test="high_quotas != null">
						#{high_quotas},
					</if>
					<if test="comm_quotas != null">
						#{comm_quotas},
					</if>
					<if test="supplierid != null">
						#{supplierid},
					</if>
					<if test="type != null">
						#{type},
					</if>
						SYSDATE(),
					<if test="updatorId != null">
						#{updatorId},
					</if>
		</trim>
	</insert>
	<select id="getTreeDataByKey" resultMap="userQuotas" parameterType="UserQuotas">
	select 
			t1.supplier_id supplierid,
			t1.name suppliername,
			t1.parent_id,
			t2.group_id,
			sum(case when t6.percode = 1 then t5.total_quota else 0 END) high_quotas,
			sum(case when t6.percode = 1 then t5.distribute_quota else 0 END) h_deal_quotas,
			sum(case when t6.percode = 1 then t5.total_quota - t5.distribute_quota else 0 END) h_left_quotas,
			sum(case when t6.percode = 1 then t5.used_quato else 0 END) h_use_quotas,
			sum(case when t6.percode = 1 then t5.usable_quota else 0 END) h_unuse_quotas,
			sum(case when t6.percode = 0 then t5.total_quota else 0 END) comm_quotas,
			sum(case when t6.percode = 0 then t5.distribute_quota else 0 END) c_deal_quotas,
			sum(case when t6.percode = 0 then t5.total_quota - t5.distribute_quota else 0 END) c_left_quotas,
			sum(case when t6.percode = 0 then t5.used_quato else 0 END) c_use_quotas,
			sum(case when t6.percode = 0 then t5.usable_quota else 0 END) c_unuse_quotas
	from ass_supplier_relative t1
	left join ass_supplier t2 on t1.supplier_id = t2.id
	left join ass_quota t5 on t1.supplier_id = t5.supplier_id
	left join ass_permission t6 on t5.permission_id = t6.id
	WHERE
		t1.is_del = 0
		<if test="supplierid != null">
			and t1.supplier_id = #{supplierid}
		</if>
		<if test="parent_id != null">
			and t1.parent_id = #{parent_id}
		</if>
	GROUP BY 
			t1.supplier_id,
			t1.name,
			t1.parent_id,
			t2.group_id
	ORDER BY 
			t2.group_id
	</select>
	<select id="getTreeUserByKey" resultMap="userQuotas" parameterType="UserQuotas">
	select 
			t1.id,
			t1.username,
			t1.telphone,
			t1.suppiler_id supplierid,
			t1.group_id,
			IFNULL(case WHEN t2.type=1 then count(t2.id) else null END,0) high_quotas,
			IFNULL(case WHEN t2.type=0 then count(t2.id) else null END,0) comm_quotas
	from ass_user t1
	left join ass_operate_log t2 on t1.id = t2.user_id
	WHERE
		t1.is_del = 0
		AND t1.suppiler_id = #{supplierid}
	GROUP BY 
			t1.id,
			t1.username,
			t1.telphone,
			t1.suppiler_id,
			t1.group_id,
			t2.type
	</select>
	<!-- 新增sql语句  add by lyn                         end-->
</mapper>